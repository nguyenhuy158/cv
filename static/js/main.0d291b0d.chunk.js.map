{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","className","src","logo","alt","Grid","container","spacing","item","xs","Card","color","CardContent","style","width","backgroundSize","objectFit","Typography","FormGroup","FormControlLabel","control","Checkbox","label","icon","checkedIcon","Stack","direction","defaultChecked","checked","disabled","ButtonGroup","size","variant","Button","LoadingButton","loading","loadingIndicator","loadingPosition","startIcon","IconButton","aria-label","fontSize","endIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d291b0d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// eslint-disable-next-line\nimport \"./App.css\";\nimport logo from \"./logo.svg\";\n\nimport AdbIcon from '@mui/icons-material/Adb';\nimport Button from \"@mui/material/Button\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\nimport Favorite from '@mui/icons-material/Favorite';\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport SendIcon from \"@mui/icons-material/Send\";\nimport Stack from \"@mui/material/Stack\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AlarmIcon from \"@mui/icons-material/Alarm\";\nimport AddShoppingCartIcon from \"@mui/icons-material/AddShoppingCart\";\nimport Fingerprint from \"@mui/icons-material/Fingerprint\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>Comming soon</p>\n\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <Card color=\"success\">\n              <CardContent>\n                <img src={\"./img.png\"} alt=\"\" style={{width:'100%', backgroundSize: 'cover', objectFit: 'cover'}}/>\n                <Typography>\n                  Quiz \n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n           <Grid item xs={4}>\n            <Card color=\"success\">\n              <CardContent>\n                <img src={\"./img.png\"} alt=\"\" style={{width:'100%', backgroundSize: 'cover', objectFit: 'cover'}}/>\n                <Typography>\n                  Quiz \n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n       </Grid>\n\n        \n\n        <FormGroup>\n          <FormControlLabel control={<Checkbox color=\"primary\"/>} label=\"are you sure?\"/>\n\n          <FormControlLabel control={<Checkbox icon={<AdbIcon />} checkedIcon={<Favorite />} color=\"primary\"/>} label=\"are you sure?\"/>\n\n          <FormControlLabel control={<Checkbox icon={<FavoriteBorder />} checkedIcon={<Favorite />} color=\"primary\"/>} label=\"are you sure?\"/>\n        </FormGroup>\n        \n        <Stack direction=\"row\" spacing={2}>\n          <Checkbox color=\"warning\" defaultChecked/>\n          <Checkbox color=\"primary\" />\n          <Checkbox color=\"warning\" checked disabled/>\n          <Checkbox color=\"warning\" disabled/>\n\n        </Stack>\n        \n\n        <ButtonGroup color=\"secondary\" size=\"large\" variant=\"contained\">\n          <Button key=\"1\">1</Button>\n          <Button key=\"2\">2</Button>\n          <Button key=\"3\">3</Button>\n        </ButtonGroup>\n\n\n\n        <Stack direction=\"row\" spacing={2}>\n          <LoadingButton loading variant=\"contained\">\n            Submit\n          </LoadingButton>\n\n          <LoadingButton\n            loading\n            variant=\"contained\"\n            loadingIndicator=\"wating...\"\n          >\n            Submit\n          </LoadingButton>\n\n          <LoadingButton\n            loadingPosition=\"start\"\n            loading\n            variant=\"contained\"\n            startIcon={<SaveIcon />}\n          >\n            Submit\n          </LoadingButton>\n        </Stack>\n        <Stack direction=\"row\" spacing={2}>\n          <IconButton aria-label=\"delete\" color=\"secondary\">\n            <DeleteIcon />\n          </IconButton>\n\n          <IconButton size=\"large\" color=\"primary\">\n            <AlarmIcon fontSize=\"inherit\" />\n          </IconButton>\n\n          <IconButton color=\"success\">\n            <Fingerprint />\n          </IconButton>\n        </Stack>\n        <Stack direction=\"row\" spacing={2}>\n          <Button\n            startIcon={<DeleteIcon />}\n            size=\"small\"\n            color=\"warning\"\n            variant=\"text\"\n          >\n            Clear\n          </Button>\n          <Button\n            endIcon={<SendIcon />}\n            size=\"small\"\n            color=\"warning\"\n            variant=\"text\"\n          >\n            Send\n          </Button>\n        </Stack>\n        <Stack direction=\"row\" spacing={2}>\n          <Button size=\"small\" color=\"warning\" variant=\"text\">\n            Done\n          </Button>\n          <Button size=\"medium\" color=\"success\" variant=\"text\">\n            Done\n          </Button>\n          <Button size=\"large\" color=\"error\" variant=\"text\">\n            Done\n          </Button>\n        </Stack>\n        <Stack direction=\"row\" spacing={2}>\n          <Button color=\"success\" variant=\"contained\">\n            Done\n          </Button>\n          <Button color=\"error\" variant=\"contained\">\n            Fail\n          </Button>\n          <Button color=\"warning\" variant=\"contained\">\n            Warning\n          </Button>\n          <Button color=\"secondary\" variant=\"contained\">\n            Secondary\n          </Button>\n          <Button color=\"primary\" variant=\"contained\">\n            Primary\n          </Button>\n        </Stack>\n        <Stack direction=\"row\" spacing={2}>\n          <Button variant=\"text\">text</Button>\n          <Button variant=\"contained\">contained</Button>\n          <Button variant=\"outlined\" disabled>\n            outlined\n          </Button>\n        </Stack>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}